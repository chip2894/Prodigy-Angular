import { __decorate, __metadata } from "tslib";
import { NgModule } from '@angular/core';
import { RouterModule, Router, NavigationStart, NavigationError, NavigationEnd, NavigationCancel, } from '@angular/router';
import { LoadingBarModule, LoadingBarService } from '@ngx-loading-bar/core';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/router';
import * as ɵngcc2 from '@ngx-loading-bar/core';
let LoadingBarRouterModule = class LoadingBarRouterModule {
    constructor(router, loader) {
        const ref = loader.useRef('router');
        router.events.subscribe((event) => {
            const navState = this.getCurrentNavigationState(router);
            if (navState && navState.ignoreLoadingBar) {
                return;
            }
            if (event instanceof NavigationStart) {
                ref.start();
            }
            if (event instanceof NavigationError || event instanceof NavigationEnd || event instanceof NavigationCancel) {
                ref.complete();
            }
        });
    }
    getCurrentNavigationState(router) {
        // `getCurrentNavigation` only available in angular `7.2`
        const currentNavigation = router.getCurrentNavigation && router.getCurrentNavigation();
        if (currentNavigation && currentNavigation.extras) {
            return currentNavigation.extras.state;
        }
        return {};
    }
};
LoadingBarRouterModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: LoadingBarRouterModule });
LoadingBarRouterModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function LoadingBarRouterModule_Factory(t) { return new (t || LoadingBarRouterModule)(ɵngcc0.ɵɵinject(ɵngcc1.Router), ɵngcc0.ɵɵinject(ɵngcc2.LoadingBarService)); }, imports: [[RouterModule, LoadingBarModule], RouterModule, LoadingBarModule] });
LoadingBarRouterModule.ctorParameters = () => [
    { type: Router },
    { type: LoadingBarService }
];
LoadingBarRouterModule = __decorate([ __metadata("design:paramtypes", [Router, LoadingBarService])
], LoadingBarRouterModule);
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(LoadingBarRouterModule, { imports: function () { return [RouterModule, LoadingBarModule]; }, exports: function () { return [RouterModule, LoadingBarModule]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LoadingBarRouterModule, [{
        type: NgModule,
        args: [{
                imports: [RouterModule, LoadingBarModule],
                exports: [RouterModule, LoadingBarModule]
            }]
    }], function () { return [{ type: ɵngcc1.Router }, { type: ɵngcc2.LoadingBarService }]; }, null); })();
export { LoadingBarRouterModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGVyLm1vZHVsZS5qcyIsInNvdXJjZXMiOlsiQG5neC1sb2FkaW5nLWJhci9yb3V0ZXIvcm91dGVyLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQ0wsWUFBWSxFQUNaLE1BQU0sRUFDTixlQUFlLEVBQ2YsZUFBZSxFQUNmLGFBQWEsRUFDYixnQkFBZ0IsR0FDakIsTUFBTSxpQkFBaUIsQ0FBQztBQUN6QixPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQzs7OztBQU01RSxJQUFhLHNCQUFzQixHQUFuQyxNQUFhLHNCQUFzQjtBQUNuQyxJQUFFLFlBQVksTUFBYyxFQUFFLE1BQXlCO0FBQ3ZELFFBQUksTUFBTSxHQUFHLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUN4QyxRQUFJLE1BQU0sQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLENBQUMsS0FBSyxFQUFFLEVBQUU7QUFDdEMsWUFBTSxNQUFNLFFBQVEsR0FBRyxJQUFJLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLENBQUM7QUFDOUQsWUFBTSxJQUFJLFFBQVEsSUFBSSxRQUFRLENBQUMsZ0JBQWdCLEVBQUU7QUFDakQsZ0JBQVEsT0FBTztBQUNmLGFBQU87QUFDUCxZQUNNLElBQUksS0FBSyxZQUFZLGVBQWUsRUFBRTtBQUM1QyxnQkFBUSxHQUFHLENBQUMsS0FBSyxFQUFFLENBQUM7QUFDcEIsYUFBTztBQUNQLFlBQ00sSUFBSSxLQUFLLFlBQVksZUFBZSxJQUFJLEtBQUssWUFBWSxhQUFhLElBQUksS0FBSyxZQUFZLGdCQUFnQixFQUFFO0FBQ25ILGdCQUFRLEdBQUcsQ0FBQyxRQUFRLEVBQUUsQ0FBQztBQUN2QixhQUFPO0FBQ1AsUUFBSSxDQUFDLENBQUMsQ0FBQztBQUNQLElBQUUsQ0FBQztBQUNILElBQ1UseUJBQXlCLENBQUMsTUFBVztBQUMvQyxRQUFJLHlEQUF5RDtBQUM3RCxRQUFJLE1BQU0saUJBQWlCLEdBQUcsTUFBTSxDQUFDLG9CQUFvQixJQUFJLE1BQU0sQ0FBQyxvQkFBb0IsRUFBRSxDQUFDO0FBQzNGLFFBQUksSUFBSSxpQkFBaUIsSUFBSSxpQkFBaUIsQ0FBQyxNQUFNLEVBQUU7QUFDdkQsWUFBTSxPQUFPLGlCQUFpQixDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUM7QUFDNUMsU0FBSztBQUNMLFFBQ0ksT0FBTyxFQUFFLENBQUM7QUFDZCxJQUFFLENBQUM7QUFDSCxDQUFDOztxVEFBQTtBQUNEO0FBQWdELFlBNUIxQixNQUFNO0FBQUksWUFBTSxpQkFBaUI7QUFBRztBQUQ3QyxzQkFBc0Isb0JBSmxDLFFBQVEsQ0FBQyxVQUNSLE9BQU8sRUFBRSxDQUFDLFlBQVksRUFBRSxoREFHdEIsa0NBQ2tCLE1BQU0sRUFBVSxpQkFBaUI7RUFKYixDQUFDLFVBQ3pDLE9BQU8sRUFBRSxDQUFDLHZCQUc4QyxHQUQ3QyxzQkFBc0IsQ0E0QmxDO09BOUJ1QixFQUFFLGdCQUFnQixDQUFDLE9BQzFDLENBQUM7Ozs7Ozs7MkdBOEJGO0FBQUMsU0E3Qlksc0JBQXNCO0FBQ2xDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7XG4gIFJvdXRlck1vZHVsZSxcbiAgUm91dGVyLFxuICBOYXZpZ2F0aW9uU3RhcnQsXG4gIE5hdmlnYXRpb25FcnJvcixcbiAgTmF2aWdhdGlvbkVuZCxcbiAgTmF2aWdhdGlvbkNhbmNlbCxcbn0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbmltcG9ydCB7IExvYWRpbmdCYXJNb2R1bGUsIExvYWRpbmdCYXJTZXJ2aWNlIH0gZnJvbSAnQG5neC1sb2FkaW5nLWJhci9jb3JlJztcblxuQE5nTW9kdWxlKHtcbiAgaW1wb3J0czogW1JvdXRlck1vZHVsZSwgTG9hZGluZ0Jhck1vZHVsZV0sXG4gIGV4cG9ydHM6IFtSb3V0ZXJNb2R1bGUsIExvYWRpbmdCYXJNb2R1bGVdLFxufSlcbmV4cG9ydCBjbGFzcyBMb2FkaW5nQmFyUm91dGVyTW9kdWxlIHtcbiAgY29uc3RydWN0b3Iocm91dGVyOiBSb3V0ZXIsIGxvYWRlcjogTG9hZGluZ0JhclNlcnZpY2UpIHtcbiAgICBjb25zdCByZWYgPSBsb2FkZXIudXNlUmVmKCdyb3V0ZXInKTtcbiAgICByb3V0ZXIuZXZlbnRzLnN1YnNjcmliZSgoZXZlbnQpID0+IHtcbiAgICAgIGNvbnN0IG5hdlN0YXRlID0gdGhpcy5nZXRDdXJyZW50TmF2aWdhdGlvblN0YXRlKHJvdXRlcik7XG4gICAgICBpZiAobmF2U3RhdGUgJiYgbmF2U3RhdGUuaWdub3JlTG9hZGluZ0Jhcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmIChldmVudCBpbnN0YW5jZW9mIE5hdmlnYXRpb25TdGFydCkge1xuICAgICAgICByZWYuc3RhcnQoKTtcbiAgICAgIH1cblxuICAgICAgaWYgKGV2ZW50IGluc3RhbmNlb2YgTmF2aWdhdGlvbkVycm9yIHx8IGV2ZW50IGluc3RhbmNlb2YgTmF2aWdhdGlvbkVuZCB8fCBldmVudCBpbnN0YW5jZW9mIE5hdmlnYXRpb25DYW5jZWwpIHtcbiAgICAgICAgcmVmLmNvbXBsZXRlKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBwcml2YXRlIGdldEN1cnJlbnROYXZpZ2F0aW9uU3RhdGUocm91dGVyOiBhbnkpIHtcbiAgICAvLyBgZ2V0Q3VycmVudE5hdmlnYXRpb25gIG9ubHkgYXZhaWxhYmxlIGluIGFuZ3VsYXIgYDcuMmBcbiAgICBjb25zdCBjdXJyZW50TmF2aWdhdGlvbiA9IHJvdXRlci5nZXRDdXJyZW50TmF2aWdhdGlvbiAmJiByb3V0ZXIuZ2V0Q3VycmVudE5hdmlnYXRpb24oKTtcbiAgICBpZiAoY3VycmVudE5hdmlnYXRpb24gJiYgY3VycmVudE5hdmlnYXRpb24uZXh0cmFzKSB7XG4gICAgICByZXR1cm4gY3VycmVudE5hdmlnYXRpb24uZXh0cmFzLnN0YXRlO1xuICAgIH1cblxuICAgIHJldHVybiB7fTtcbiAgfVxufVxuIl19