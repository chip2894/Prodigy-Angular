import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
import * as ɵngcc0 from '@angular/core';
export class IconService {
    constructor() {
        this.iconsByName = {};
    }
    register(name, icon) {
        this.iconsByName[name] = icon;
    }
    registerAll(iconsByName) {
        Object.assign(this.iconsByName, iconsByName);
    }
    get(name) {
        const icon = this.iconsByName[name];
        if (!icon) {
            throw new Error(`[Iconify]: No icon registered for name '${name}'. Use 'IconService' to register icons.`);
        }
        return icon;
    }
}
IconService.ɵfac = function IconService_Factory(t) { return new (t || IconService)(); };
IconService.ɵprov = i0.ɵɵdefineInjectable({ factory: function IconService_Factory() { return new IconService(); }, token: IconService, providedIn: "root" });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IconService, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return []; }, null); })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWNvbi5zZXJ2aWNlLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9pY29uaWZ5L3NyYy9saWIvaWNvbi5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0M7O0FBSUEsTUFBTSxPQUFPLFdBQVc7QUFDeEIsSUFKQTtBQUNFLFFBR1EsZ0JBQVcsR0FBMkIsRUFBRSxDQUFDO0FBQ25ELEtBZ0JDO0FBQ0QsSUFoQkUsUUFBUSxDQUFDLElBQVksRUFBRSxJQUFZO0FBQ3JDLFFBQUksSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsR0FBRyxJQUFJLENBQUM7QUFDbEMsSUFBRSxDQUFDO0FBQ0gsSUFDRSxXQUFXLENBQUMsV0FBbUM7QUFDaEQsUUFBRyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUUsV0FBVyxDQUFDLENBQUM7QUFDakQsSUFBRSxDQUFDO0FBQ0gsSUFDRSxHQUFHLENBQUMsSUFBWTtBQUFJLFFBQ2xCLE1BQU0sSUFBSSxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDeEMsUUFBSSxJQUFJLENBQUMsSUFBSSxFQUFFO0FBQ2YsWUFBTSxNQUFNLElBQUksS0FBSyxDQUFDLDJDQUEyQyxJQUFJLHlDQUF5QyxDQUFDLENBQUM7QUFDaEgsU0FBSztBQUNMLFFBQUksT0FBTyxJQUFJLENBQUM7QUFDaEIsSUFBRSxDQUFDO0FBQ0g7d0ZBQUM7QUFDRDt1Q0F0QkMsVUFBVSxTQUFDO01BQ1YsVUFBVSxFQUFFLE1BQU07YUFDbkI7Ozs7QUFKQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBS0EsQUFBQSxBQUFBLEFBQUEsQUFIQSxBQUlBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFpQkEsQUFmQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQXBCQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuQEluamVjdGFibGUoe1xyXG4gIHByb3ZpZGVkSW46ICdyb290JyxcclxufSlcclxuZXhwb3J0IGNsYXNzIEljb25TZXJ2aWNlIHtcclxuICBwcml2YXRlIGljb25zQnlOYW1lOiBSZWNvcmQ8c3RyaW5nLCBvYmplY3Q+ID0ge307XHJcblxyXG4gIHJlZ2lzdGVyKG5hbWU6IHN0cmluZywgaWNvbjogb2JqZWN0KSB7XHJcbiAgICB0aGlzLmljb25zQnlOYW1lW25hbWVdID0gaWNvbjtcclxuICB9XHJcblxyXG4gIHJlZ2lzdGVyQWxsKGljb25zQnlOYW1lOiBSZWNvcmQ8c3RyaW5nLCBvYmplY3Q+KXtcclxuICAgIE9iamVjdC5hc3NpZ24odGhpcy5pY29uc0J5TmFtZSwgaWNvbnNCeU5hbWUpO1xyXG4gIH1cclxuXHJcbiAgZ2V0KG5hbWU6IHN0cmluZyk6IG9iamVjdCB7XHJcbiAgICBjb25zdCBpY29uID0gdGhpcy5pY29uc0J5TmFtZVtuYW1lXTtcclxuICAgIGlmICghaWNvbikge1xyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYFtJY29uaWZ5XTogTm8gaWNvbiByZWdpc3RlcmVkIGZvciBuYW1lICcke25hbWV9Jy4gVXNlICdJY29uU2VydmljZScgdG8gcmVnaXN0ZXIgaWNvbnMuYCk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gaWNvbjtcclxuICB9XHJcbn1cclxuIl19