{"version":3,"file":"visurel-iconify-angular.umd.js","sources":["../../../projects/iconify/src/lib/icon.service.ts","../../../projects/iconify/src/lib/svg.ts","../../../projects/iconify/src/lib/icon.directive.ts","../../../projects/iconify/src/lib/icon.module.ts","../../../projects/iconify/src/public-api.ts","../../../projects/iconify/src/visurel-iconify-angular.ts"],"names":["Injectable","Directive","DomSanitizer","Input","HostBinding","NgModule"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class IconService {\r\n  private iconsByName: Record<string, object> = {};\r\n\r\n  register(name: string, icon: object) {\r\n    this.iconsByName[name] = icon;\r\n  }\r\n\r\n  registerAll(iconsByName: Record<string, object>){\r\n    Object.assign(this.iconsByName, iconsByName);\r\n  }\r\n\r\n  get(name: string): object {\r\n    const icon = this.iconsByName[name];\r\n    if (!icon) {\r\n      throw new Error(`[Iconify]: No icon registered for name '${name}'. Use 'IconService' to register icons.`);\r\n    }\r\n    return icon;\r\n  }\r\n}\r\n","/* tslint:disable:no-redundant-jsdoc variable-name no-conditional-assignment no-bitwise */\r\n\r\nimport { IconProps } from './icon-props.interface';\r\n\r\n/**\r\n * Unique id counter\r\n */\r\nlet idCounter = 0;\r\n\r\n/**\r\n * Regex used to split dimensions\r\n */\r\nconst unitsSplit = /(-?[0-9.]*[0-9]+[0-9.]*)/g;\r\nconst unitsTest = /^-?[0-9.]*[0-9]+[0-9.]*$/g;\r\n\r\n/**\r\n * Attributes used for icon\r\n */\r\nconst iconAttributes = ['width', 'height', 'inline', 'hFlip', 'vFlip', 'flip', 'rotate', 'align', 'color', 'box'];\r\n\r\n/**\r\n * Default attribute values\r\n */\r\nconst defaultAttributes = {\r\n  left: 0,\r\n  top: 0,\r\n  width: 16,\r\n  height: 16,\r\n  rotate: 0,\r\n  hFlip: false,\r\n  vFlip: false\r\n};\r\n\r\n/**\r\n * Add missing properties to icon\r\n *\r\n * Important: in PHP version of this library this function is part of Collection class: Collection::addMissingAttributes()\r\n *\r\n * JavaScript version uses separate file so this function could be used in React and other components without loading\r\n * entire Collection class.\r\n */\r\nexport function normalize(data: object): object {\r\n  const item = Object.assign(Object.create(null), defaultAttributes, data);\r\n  if (item.inlineTop === void 0) {\r\n    item.inlineTop = item.top;\r\n  }\r\n  if (item.inlineHeight === void 0) {\r\n    item.inlineHeight = item.height;\r\n  }\r\n  if (item.verticalAlign === void 0) {\r\n    // -0.143 if icon is designed for 14px height,\r\n    // otherwise assume icon is designed for 16px height\r\n    item.verticalAlign = item.height % 7 === 0 && item.height % 8 !== 0 ? -0.143 : -0.125;\r\n  }\r\n  return item;\r\n}\r\n\r\n/**\r\n * Get preserveAspectRatio attribute value\r\n */\r\nexport function getAlignment(align: { horizontal: string; vertical: string; slice: boolean }): string {\r\n  let result;\r\n  switch (align.horizontal) {\r\n    case 'left':\r\n      result = 'xMin';\r\n      break;\r\n\r\n    case 'right':\r\n      result = 'xMax';\r\n      break;\r\n\r\n    default:\r\n      result = 'xMid';\r\n  }\r\n  switch (align.vertical) {\r\n    case 'top':\r\n      result += 'YMin';\r\n      break;\r\n\r\n    case 'bottom':\r\n      result += 'YMax';\r\n      break;\r\n\r\n    default:\r\n      result += 'YMid';\r\n  }\r\n  result += align.slice ? ' slice' : ' meet';\r\n  return result;\r\n}\r\n\r\n/**\r\n * SVG class\r\n *\r\n * @see @iconify/json-tools/src/svg.js\r\n */\r\nexport class SVG {\r\n  /**\r\n   * Constructor\r\n   *\r\n   *  Use Collection.getIconData() to retrieve icon data\r\n   */\r\n  constructor(private _icon) {}\r\n\r\n  /**\r\n   * Calculate second dimension when only 1 dimension is set\r\n   * If size == width, ratio = height/width\r\n   * If size == height, ratio = width/height\r\n   */\r\n  static calculateDimension(size: string | number, ratio: number, precision = 100): string | number | null {\r\n    if (ratio === 1) {\r\n      return size;\r\n    }\r\n\r\n    if (typeof size === 'number') {\r\n      return Math.ceil(size * ratio * precision) / precision;\r\n    }\r\n\r\n    // split code into sets of strings and numbers\r\n    const split = size.split(unitsSplit);\r\n    if (split === null || !split.length) {\r\n      return null;\r\n    }\r\n    const results = [];\r\n    let code = split.shift();\r\n    let isNumber = unitsTest.test(code);\r\n    let num;\r\n\r\n    while (true) {\r\n      if (isNumber) {\r\n        num = parseFloat(code);\r\n        if (isNaN(num)) {\r\n          results.push(code);\r\n        } else {\r\n          results.push(Math.ceil(num * ratio * precision) / precision);\r\n        }\r\n      } else {\r\n        results.push(code);\r\n      }\r\n\r\n      // next\r\n      code = split.shift();\r\n      if (code === void 0) {\r\n        return results.join('');\r\n      }\r\n      isNumber = !isNumber;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Replace IDs in SVG output with unique IDs\r\n   * Fast replacement without parsing XML, assuming commonly used patterns.\r\n   */\r\n  static replaceIDs(body: string): string {\r\n    const regex = /\\sid=\"(\\S+)\"/g;\r\n    const ids = [];\r\n    let match: RegExpExecArray;\r\n    let prefix: string;\r\n\r\n    function strReplace(search, replace, subject) {\r\n      let pos = 0;\r\n\r\n      while ((pos = subject.indexOf(search, pos)) !== -1) {\r\n        subject = subject.slice(0, pos) + replace + subject.slice(pos + search.length);\r\n        pos += replace.length;\r\n      }\r\n\r\n      return subject;\r\n    }\r\n\r\n    // Find all IDs\r\n    while (match = regex.exec(body)) {\r\n      ids.push(match[1]);\r\n    }\r\n    if (!ids.length) {\r\n      return body;\r\n    }\r\n\r\n    prefix = 'IconifyId-' + Date.now().toString(16) + '-' + (Math.random() * 0x1000000 | 0).toString(16) + '-';\r\n\r\n    // Replace with unique ids\r\n    ids.forEach((id) => {\r\n      const newID = prefix + idCounter;\r\n      idCounter++;\r\n      body = strReplace('=\"' + id + '\"', '=\"' + newID + '\"', body);\r\n      body = strReplace('=\"#' + id + '\"', '=\"#' + newID + '\"', body);\r\n      body = strReplace('(#' + id + ')', '(#' + newID + ')', body);\r\n    });\r\n\r\n    return body;\r\n  }\r\n\r\n  /**\r\n   * Get SVG attributes\r\n   */\r\n  getAttributes(props: IconProps) {\r\n    const item = this._icon;\r\n    if (typeof props !== 'object') {\r\n      props = Object.create(null);\r\n    }\r\n\r\n    // Set data\r\n    const align = {\r\n      horizontal: 'center',\r\n      vertical: 'middle',\r\n      slice: false\r\n    };\r\n    const transform = {\r\n      rotate: item.rotate,\r\n      hFlip: item.hFlip,\r\n      vFlip: item.vFlip\r\n    };\r\n    const style = Object.create(null);\r\n\r\n    const attributes = Object.create(null);\r\n\r\n    // Get width/height\r\n    const inline = props.inline === true || props.inline === 'true' || props.inline === '1';\r\n\r\n    const box = {\r\n      left: item.left,\r\n      top: inline ? item.inlineTop : item.top,\r\n      width: item.width,\r\n      height: inline ? item.inlineHeight : item.height\r\n    };\r\n\r\n    // Transformations\r\n    ['hFlip', 'vFlip'].forEach(key => {\r\n      if (props[key] !== void 0 && (props[key] === true || props[key] === 'true' || props[key] === '1')) {\r\n        transform[key] = !transform[key];\r\n      }\r\n    });\r\n    if (props.flip !== void 0) {\r\n      props.flip.toLowerCase().split(/[\\s,]+/).forEach(value => {\r\n        switch (value) {\r\n          case 'horizontal':\r\n            transform.hFlip = !transform.hFlip;\r\n            break;\r\n\r\n          case 'vertical':\r\n            transform.vFlip = !transform.vFlip;\r\n        }\r\n      });\r\n    }\r\n    if (props.rotate !== void 0) {\r\n      let value = props.rotate;\r\n      if (typeof value === 'number') {\r\n        transform.rotate += value;\r\n      } else if (typeof value === 'string') {\r\n        const units = value.replace(/^-?[0-9.]*/, '');\r\n        if (units === '') {\r\n          value = parseInt(value, 10);\r\n          if (!isNaN(value)) {\r\n            transform.rotate += value;\r\n          }\r\n        } else if (units !== value) {\r\n          let split: boolean | number = false;\r\n          switch (units) {\r\n            case '%':\r\n              // 25% -> 1, 50% -> 2, ...\r\n              split = 25;\r\n              break;\r\n\r\n            case 'deg':\r\n              // 90deg -> 1, 180deg -> 2, ...\r\n              split = 90;\r\n          }\r\n          if (split) {\r\n            value = parseInt(value.slice(0, value.length - units.length), 10);\r\n            if (!isNaN(value)) {\r\n              transform.rotate += Math.round(value / split);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // Apply transformations to box\r\n    const transformations = [];\r\n    let tempValue;\r\n    if (transform.hFlip) {\r\n      if (transform.vFlip) {\r\n        transform.rotate += 2;\r\n      } else {\r\n        // Horizontal flip\r\n        transformations.push('translate(' + (box.width + box.left) + ' ' + (0 - box.top) + ')');\r\n        transformations.push('scale(-1 1)');\r\n        box.top = box.left = 0;\r\n      }\r\n    } else if (transform.vFlip) {\r\n      // Vertical flip\r\n      transformations.push('translate(' + (0 - box.left) + ' ' + (box.height + box.top) + ')');\r\n      transformations.push('scale(1 -1)');\r\n      box.top = box.left = 0;\r\n    }\r\n    switch (transform.rotate % 4) {\r\n      case 1:\r\n        // 90deg\r\n        tempValue = box.height / 2 + box.top;\r\n        transformations.unshift('rotate(90 ' + tempValue + ' ' + tempValue + ')');\r\n        // swap width/height and x/y\r\n        if (box.left !== 0 || box.top !== 0) {\r\n          tempValue = box.left;\r\n          box.left = box.top;\r\n          box.top = tempValue;\r\n        }\r\n        if (box.width !== box.height) {\r\n          tempValue = box.width;\r\n          box.width = box.height;\r\n          box.height = tempValue;\r\n        }\r\n        break;\r\n\r\n      case 2:\r\n        // 180deg\r\n        transformations.unshift('rotate(180 ' + (box.width / 2 + box.left) + ' ' + (box.height / 2 + box.top) + ')');\r\n        break;\r\n\r\n      case 3:\r\n        // 270deg\r\n        tempValue = box.width / 2 + box.left;\r\n        transformations.unshift('rotate(-90 ' + tempValue + ' ' + tempValue + ')');\r\n        // swap width/height and x/y\r\n        if (box.left !== 0 || box.top !== 0) {\r\n          tempValue = box.left;\r\n          box.left = box.top;\r\n          box.top = tempValue;\r\n        }\r\n        if (box.width !== box.height) {\r\n          tempValue = box.width;\r\n          box.width = box.height;\r\n          box.height = tempValue;\r\n        }\r\n        break;\r\n    }\r\n\r\n    // Calculate dimensions\r\n    // Values for width/height: null = default, 'auto' = from svg, false = do not set\r\n    // Default: if both values aren't set, height defaults to '1em', width is calculated from height\r\n    const customWidth = props.width ? props.width : null;\r\n    let customHeight = props.height ? props.height : null;\r\n\r\n    let width;\r\n    let height;\r\n    if (customWidth === null && customHeight === null) {\r\n      customHeight = '1em';\r\n    }\r\n    if (customWidth !== null && customHeight !== null) {\r\n      width = customWidth;\r\n      height = customHeight;\r\n    } else if (customWidth !== null) {\r\n      width = customWidth;\r\n      height = SVG.calculateDimension(width, box.height / box.width);\r\n    } else {\r\n      height = customHeight;\r\n      width = SVG.calculateDimension(height, box.width / box.height);\r\n    }\r\n\r\n    if (width !== false) {\r\n      attributes.width = width === 'auto' ? box.width : width;\r\n    }\r\n    if (height !== false) {\r\n      attributes.height = height === 'auto' ? box.height : height;\r\n    }\r\n\r\n    // Add vertical-align for inline icon\r\n    if (inline && item.verticalAlign !== 0) {\r\n      style['vertical-align'] = item.verticalAlign + 'em';\r\n    }\r\n\r\n    // Check custom alignment\r\n    if (props.align !== void 0) {\r\n      props.align.toLowerCase().split(/[\\s,]+/).forEach(value => {\r\n        switch (value) {\r\n          case 'left':\r\n          case 'right':\r\n          case 'center':\r\n            align.horizontal = value;\r\n            break;\r\n\r\n          case 'top':\r\n          case 'bottom':\r\n          case 'middle':\r\n            align.vertical = value;\r\n            break;\r\n\r\n          case 'crop':\r\n            align.slice = true;\r\n            break;\r\n\r\n          case 'meet':\r\n            align.slice = false;\r\n        }\r\n      });\r\n    }\r\n\r\n    // Generate viewBox and preserveAspectRatio attributes\r\n    attributes.preserveAspectRatio = getAlignment(align);\r\n    attributes.viewBox = box.left + ' ' + box.top + ' ' + box.width + ' ' + box.height;\r\n\r\n    // Generate body\r\n    let body = SVG.replaceIDs(item.body);\r\n\r\n    if (props.color !== void 0) {\r\n      body = body.replace(/currentColor/g, props.color);\r\n    }\r\n    if (transformations.length) {\r\n      body = '<g transform=\"' + transformations.join(' ') + '\">' + body + '</g>';\r\n    }\r\n    if (props.box === true || props.box === 'true' || props.box === '1') {\r\n      // Add transparent bounding box\r\n      // tslint:disable-next-line:max-line-length\r\n      body += '<rect x=\"' + box.left + '\" y=\"' + box.top + '\" width=\"' + box.width + '\" height=\"' + box.height + '\" fill=\"rgba(0, 0, 0, 0)\" />';\r\n    }\r\n\r\n    return {\r\n      attributes,\r\n      body,\r\n      style\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Generate SVG\r\n   */\r\n  getSVG(attributes: IconProps) {\r\n    const data = this.getAttributes(attributes);\r\n\r\n    let svg = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"';\r\n\r\n    // Add SVG attributes\r\n    Object.keys(data.attributes).forEach(attr => {\r\n      svg += ' ' + attr + '=\"' + data.attributes[attr] + '\"';\r\n    });\r\n\r\n    // Add style with 360deg transformation to style to prevent subpixel rendering bug\r\n    svg += ' style=\"-ms-transform: rotate(360deg); -webkit-transform: rotate(360deg); transform: rotate(360deg);';\r\n    Object.keys(data.style).forEach(attr => {\r\n      svg += ' ' + attr + ': ' + data.style[attr] + ';';\r\n    });\r\n\r\n    svg += '\">';\r\n\r\n    svg += data.body + '</svg>';\r\n\r\n    return svg;\r\n  }\r\n}\r\n","import { IconService } from './icon.service';\r\nimport { Directive, HostBinding, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\r\nimport { normalize, SVG } from './svg';\r\n\r\n@Directive({\r\n  selector: 'ic-icon,[icIcon]'\r\n})\r\nexport class IconDirective implements OnInit, OnChanges {\r\n\r\n  @Input() icIcon: object | string;\r\n  @Input() icon: object | string;\r\n\r\n  // Optional Properties\r\n  @Input() color: string;\r\n\r\n  @Input()\r\n  @HostBinding('class.ic-inline')\r\n  inline: boolean;\r\n\r\n  @Input() box: boolean;\r\n\r\n  // Dimensions and Alignment\r\n  @Input() size: string;\r\n  @Input() width = '1em';\r\n  @Input() height = '1em';\r\n  @Input() align: string;\r\n\r\n  // Transformations\r\n  @Input() hFlip: boolean;\r\n  @Input() vFlip: boolean;\r\n  @Input() flip: string;\r\n  @Input() rotate = 0;\r\n\r\n  @HostBinding('innerHTML')\r\n  iconHTML: SafeHtml;\r\n\r\n  constructor(private domSanitizer: DomSanitizer, private iconService: IconService) { }\r\n\r\n  ngOnInit() { }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes) {\r\n      this.updateIcon();\r\n    }\r\n  }\r\n\r\n  updateIcon() {\r\n    const icon = this.getIcon();\r\n    const svg = new SVG(normalize(icon));\r\n    this.iconHTML = this.generateSvgHtml(svg);\r\n  }\r\n\r\n  private getIcon(): object {\r\n    const iconInput = this.icon || this.icIcon;\r\n    if (typeof iconInput !== 'object' && typeof iconInput !== 'string') {\r\n      throw new Error('[Iconify]: No icon provided');\r\n    }\r\n    return typeof iconInput === 'object' ? iconInput : this.iconService.get(iconInput);\r\n  }\r\n\r\n  private generateSvgHtml(svg: SVG): SafeHtml{\r\n    return this.domSanitizer.bypassSecurityTrustHtml(svg.getSVG({\r\n      width: this.size || this.width,\r\n      height: this.size || this.height,\r\n      color: this.color,\r\n      inline: this.inline,\r\n      box: this.box,\r\n      align: this.align,\r\n      hFlip: this.hFlip,\r\n      vFlip: this.vFlip,\r\n      flip: this.flip,\r\n      rotate: this.rotate\r\n    }));\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { IconDirective } from './icon.directive';\r\n\r\n\r\n@NgModule({\r\n  declarations: [IconDirective],\r\n  imports: [],\r\n  exports: [IconDirective]\r\n})\r\nexport class IconModule {\r\n}\r\n","/*\r\n * Public API Surface of iconify\r\n */\r\n\r\nexport * from './lib/icon.directive';\r\nexport * from './lib/icon.module';\r\nexport * from './lib/icon.interface';\r\nexport * from './lib/icon-props.interface';\r\nexport * from './lib/icon.service';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}